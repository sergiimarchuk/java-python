/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication2;


import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Arrays;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import java.io.File;
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
       

/**
 *
 * @author sergiy
 */
public class AOContacts extends javax.swing.JFrame {
     Connection conn = null;
     ResultSet rs = null;
     PreparedStatement pst = null; 
     JFileChooser openFileChosser;
     JFileChooser saveFileChosser;

    /**
     * Creates new form AOContacts
     */
    public AOContacts() {
        initComponents();
        conn = db.java_db();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2,size.height/2 - getHeight()/2);
        setExtendedState(addServer.MAXIMIZED_BOTH); 
        
        openFileChosser = new JFileChooser();
        openFileChosser.setFileFilter(new FileNameExtensionFilter("TXT files","txt"));
        
        saveFileChosser = new JFileChooser();
        saveFileChosser.setFileFilter(new FileNameExtensionFilter("TXT files","txt"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        txt_find = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_find_server = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_servers = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        messageLabel = new javax.swing.JLabel();
        onCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        textArea1 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Main menu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Read data from file *.txt");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Find server name");

        txt_find_server.setText("alt-sgt%");

        jButton3.setText("Fine server");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        table_servers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        table_servers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_serversMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table_servers);

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        jButton5.setText("Save data to *.txt file");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Save data into DB");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        onCheckBox1.setText("Add to DB");
        onCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onCheckBox1ActionPerformed(evt);
            }
        });

        textArea1.setColumns(20);
        textArea1.setRows(5);
        jScrollPane3.setViewportView(textArea1);

        jButton4.setText("Update date ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setText("ID server");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(4, 4, 4)
                        .addComponent(txt_find_server, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(onCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_find, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 261, Short.MAX_VALUE)
                                .addComponent(jButton1)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_find_server, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(txt_find, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton6)
                            .addComponent(jButton1))))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(onCheckBox1)
                            .addComponent(jButton2)
                            .addComponent(jButton5))
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane3)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        MainMenu j = new MainMenu();
        j.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try{

            if (txt_find_server.getText().equals("*"))  {
                //JOptionPane.showMessageDialog(null, "Please enter server name");

                int row = table_servers.getSelectedRow();
                String sql = "select id_server, server_name from tab_main_resp_server";

                pst = conn.prepareStatement(sql);

                pst.execute();

                rs = pst.executeQuery();
                table_servers.setModel(DbUtils.resultSetToTableModel(rs));

            }
            else if (txt_find_server.getText().contains("%") )  {

                String part = txt_find_server.getText();
                java.util.List<String> result = Arrays.asList(part.split("\\%"));

                System.out.println(result.get(0));

                //String sql = "SELECT server_name FROM tab_collect_statistic WHERE  \"server_name\"  like '" + result.get(0) + "%'";
                String sql = "SELECT id_server, server_name FROM tab_main_resp_server WHERE 	 \"server_name\"  like '" + result.get(0) + "%'";
                pst = conn.prepareStatement(sql);

                pst.execute();

                rs = pst.executeQuery();
                table_servers.setModel(DbUtils.resultSetToTableModel(rs));

            }
            else  {
                String sql = "select * from tab_main_resp_server where server_name =?";
                pst = conn.prepareStatement(sql);

                pst.setString(1,txt_find_server.getText());
                pst.execute();

                rs = pst.executeQuery();
                table_servers.setModel(DbUtils.resultSetToTableModel(rs));
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        finally {

            try{
                rs.close();
                pst.close();
            }
            catch(Exception e){

            }
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void table_serversMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_serversMouseClicked
        // TODO add your handling code here:
        textArea.setText("");
        int row = table_servers.getSelectedRow();  
        txt_find.setText(table_servers.getModel().getValueAt(row, 0).toString()); 
        //txt_find.setText(table_servers.getModel().getValueAt(row, 0).toString());     //us_id
        //txtuser_l.setText(table_servers.getModel().getValueAt(row, 1).toString());    //user_l
        //txtuser_f.setText(table_servers.getModel().getValueAt(row, 2).toString());    //user_f
        //txtdepartment.setText(table_servers.getModel().getValueAt(row, 3).toString());//department
        //txtregion.setText(table_servers.getModel().getValueAt(row, 4).toString());    //region
        //txtposition.setText(table_servers.getModel().getValueAt(row, 5).toString());  //position
        //txtstatus.setText(table_servers.getModel().getValueAt(row, 6).toString());    //status
        //txtpasswd.setText(.getModel().getValueAt(row, 7).toString());    //passwd
        
        String sql = "select info_ao_resp from tab_ao_resp where id_server =?";
         
               
                    
           
            
            try {                         
                pst=conn.prepareStatement(sql);
                pst.setString(1,txt_find.getText());
            
            
                //pst.setString(2,textArea.getText());
                pst.execute();
                rs = pst.executeQuery();
                //table_servers.setModel(DbUtils.resultSetToTableModel(rs));
                
                //int resultat = rs.findColumn("info_ao_resp");
                
                
                while (rs.next()) {
                    
                    String ao_resp = rs.getString("info_ao_resp");
                    textArea.append(ao_resp);
                }
                
           }
            catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }finally {

                try{
                    rs.close();
                    pst.close();

                }
                catch(Exception e){
                 //  JOptionPane.showMessageDialog(null,e);
                }
            }
        
    }//GEN-LAST:event_table_serversMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int returnValue = openFileChosser.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            
        
        try{
            //open file
        File inputFile = openFileChosser.getSelectedFile();
        FileReader inputReader = new FileReader(inputFile);
        BufferedReader inputBR = new BufferedReader(inputReader);
        // read file
        String line = inputBR.readLine();
        
        textArea1.setText("");
        while (line != null) {
            textArea1.append(line+"\n");
            line = inputBR.readLine();
        }
        // close the file
        inputBR.close();
        inputReader.close();
        message("File successfully read", false);
        
        
        
        } catch(IOException ioe) {
            message("Error reading file", true);
        }
        
        }
        else {
            message("No file choosen", true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int returnValue = saveFileChosser.showSaveDialog(this);
        
        
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            try {
                // open file
                File outpuFile = saveFileChosser.getSelectedFile();
                PrintWriter outputPW = new PrintWriter(outpuFile);
                // write file
                outputPW.write(textArea.getText());
                // close file
                outputPW.flush();
                outputPW.close();
                
                message("File successfully written", false);
                 
                
        } catch (IOException ioe) {
                message("Error wrting file", true);
        }
        }
        else {
           message("No file choosen", true); 
         
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
            
            try {    
                String sql = "insert into tab_ao_resp " + "(id_server, info_ao_resp) values (?,?) ";                
                
                if (txt_find.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please enter server name");
                }else
                pst=conn.prepareStatement(sql);
                pst.setString(1,txt_find.getText());
            
            
                pst.setString(2,textArea.getText() + textArea1.getText());
                pst.execute();
                JOptionPane.showMessageDialog(null,"Data is saved successfully");
            }
            catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }finally {

                try{
                    rs.close();
                    pst.close();

                }
                catch(Exception e){
                 //  JOptionPane.showMessageDialog(null,e);
                }
            }
            
    }//GEN-LAST:event_jButton6ActionPerformed

    private void onCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onCheckBox1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_onCheckBox1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:                   
        //String sql = "UPDATE 	\"info_ao_resp\" FROM \"tab_collect_statistic\" WHERE  \"server_name\"  like '" + textArea.getText() + "%'";
        String sql = "UPDATE \"tab_ao_resp\" SET \"info_ao_resp\" = '" + textArea.getText() + textArea1.getText() + "' WHERE \"id_server\" ='" + txt_find.getText() + "'";
            
            try {                         
                pst=conn.prepareStatement(sql);
                //pst.setString(1,txt_find.getText());
            
            
                //pst.setString(2,textArea.getText());
                pst.execute();
                JOptionPane.showMessageDialog(null,"Data is UPDATED successfully");
            }
            catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }finally {

                try{
                    rs.close();
                    pst.close();

                }
                catch(Exception e){
                 //  JOptionPane.showMessageDialog(null,e);
                }
            }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void message(String msg, boolean isError){
       if (isError) {
           messageLabel.setText(msg);
           messageLabel.setForeground(Color.red);
       } 
       else {
           messageLabel.setText(msg);
           messageLabel.setForeground(Color.BLUE);
       }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AOContacts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AOContacts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AOContacts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AOContacts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AOContacts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JCheckBox onCheckBox1;
    private javax.swing.JTable table_servers;
    private javax.swing.JTextArea textArea;
    private javax.swing.JTextArea textArea1;
    private javax.swing.JTextField txt_find;
    private javax.swing.JTextField txt_find_server;
    // End of variables declaration//GEN-END:variables

   
}
